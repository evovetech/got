# got -- .goreleaser.yml

project_name: got

# Release Info
release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL.
  github:
    owner: evovetech
    name: got

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: true

  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: true

# Homebrew
brew:
  # Repository to push the tap to.
  github:
    owner: evovetech
    name: homebrew-tap

  # Folder inside the repository to put the formula.
  # Default is the root folder.
  folder: Formula

  commit_author:
    name: Layne Penney
    email: layne@evove.tech

  install: bin.install "got"


# Changes
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
    - Merge pull request
    - Merge branch


# Hooks
before:
  hooks:
  - go generate ./...

# Build
builds:
# You can have multiple builds defined as a yaml list
- # Path to main.go file or main package.
  # Default is `.`.
  main: .

  # Name template for the binary final name.
  # Default is the name of the project directory.
  binary: got

  # Custom environment variables to be set during the builds.
  # Default is empty.
  env:
  - CGO_ENABLED=0

  # GOOS list to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are darwin and linux.
  goos:
  - linux
  - darwin
  - windows

  # GOARCH to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are 386 and amd64.
  goarch:
  - 386
  - amd64
  - arm
  - arm64

  # GOARM to build for when GOARCH is arm.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Default is only 6.
  goarm:
  - 6
  - 7

  # List of combinations of GOOS + GOARCH + GOARM to ignore.
  # Default is empty.
  ignore:
  - goos: darwin
    goarch: 386
  - goos: linux
    goarch: arm
    goarm: 7

# Archive
archive:

  format: tar.gz

  replacements:
    darwin: Darwin
    linux: Linux
    windows: Windows
    386: i386
    amd64: x86_64

  files:
  - LICENSE
  - README.md
  - CHANGELOG.md
  - docs/*

snapshot:
  name_template: SNAPSHOT-{{ .Commit }}

checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'

dist: dist

sign:
  cmd: gpg
  args:
  - --output
  - $signature
  - --detach-sig
  - $artifact
  signature: ${artifact}.sig
  artifacts: none
