// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package file

type StringNodeList map[String]*StringNode

func (list *StringNodeList) init() StringNodeList {
	l := *list
	if l == nil {
		l = make(StringNodeList)
		*list = l
	}
	return l
}

func (list StringNodeList) add(node *StringNode) {
	if n, ok := list[node.Value]; ok {
		for _, child := range node.children {
			n.Add(child)
		}
	} else {
		list[node.Value] = node
	}
}

type PathNodeList map[Path]*PathNode

func (list *PathNodeList) init() PathNodeList {
	l := *list
	if l == nil {
		l = make(PathNodeList)
		*list = l
	}
	return l
}

func (list PathNodeList) add(node *PathNode) {
	if n, ok := list[node.Value]; ok {
		for _, child := range node.children {
			n.Add(child)
		}
	} else {
		list[node.Value] = node
	}
}
